
.btn {
	&,
	&:link,
	&:visited{
		text-transform:uppercase;
		text-decoration: none;
		padding: 1.5rem 4rem;
		display: inline-block;
		border-radius: 10rem;
		transition: all .2s;
		transition: all .2s; //-----------------------------transition is in the initial state
		position: relative;// set relative so the created button :after can be hidden behind
		font-size: $default-font-size;


		border: none;
        cursor: pointer;
	}
	&:hover {
		transform: translateY(-3px);
		box-shadow: 0 1rem 2rem rgba($color-black, .2);//----------------offsetx offsety blur color
	}
	&:active,
	&:focus { //-----------------------------------focus is also selected to remove border highlighting in buttons instead do the transform
		outline: none;
		transform: translateY(-1px);
		box-shadow: 0 .5rem 1rem rgba($color-black, .2); 

	}
	&--white{
		background-color: $color-white;
		color: $color-grey-dark;
	}
	&--green {
		background-color: $color-primary;
		color: $color-white;
		&::after {
			background-color: $color-primary;
		}
	}
	&::after {
		content: "";
		display: inline-block;
		width: 100%; ///:after pseudo element is treated like a child to the element
		height: 100%;
		border-radius: 10rem;
		position: absolute;
		top: 0;
		left: 0;
		z-index: -1;
		transition: all .4s; //-----------------------------transition for the after element
	
}
	&--white::after { // -------------------o add background color to the empty element above
		background-color: $color-white;
	}

	&:hover::after {// -------------------- this styles are added to the btn element only when the element is hovered
		transform: scaleX(1.4) scaleY(1.6);
		opacity:0;
		
	}

	&--animated {
		animation: moveInBottom .5s ease-out .75s;
		animation-fill-mode: backwards;//------------automatically apply the animation at 0% before the animation starts
	}
}

.btn-text {
	&:link,
	&:visited {
		font-size: $default-font-size;
		color: $color-primary;
		display: inline-block;
		text-decoration: none;
		border-bottom: 1px solid $color-primary;
		padding: 3px;
		transition: all .2s;
	}

	&:hover {
		background-color: $color-primary;
		color: $color-white;
		box-shadow: 0 1rem 2rem rgba($color-black, .15);
		transform: translateY(-2px);
	}

	&:active {
		box-shadow: 0 .5rem 1rem rgba($color-black, .15);
		transform: translateY(0);
	}
}